/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/scene.gltf --transform --types 
Files: public/models/scene.gltf [7.01KB] > /Users/gunnarhuscroft/projects/Code/hello-kitty-roulette/scene-transformed.glb [5.82KB] (17%)
Author: slightcherry (https://sketchfab.com/slightcherry)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-shotgun-shell-da1bd103a86a4e6baab216a55e869e2d
Title: Low Poly Shotgun Shell
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { GroupProps } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_3: THREE.Mesh
    Object_4: THREE.Mesh
    Object_5: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    coppepr: THREE.MeshStandardMaterial
    nude: THREE.MeshStandardMaterial
    material: THREE.MeshStandardMaterial
  }
}

interface ShellProps extends GroupProps {
  isLive?: boolean // true = red (live), false = blue (dead)
}

export function Shell({ isLive = true, ...props }: ShellProps) {
  const { nodes, materials } = useGLTF('/models/shell.glb') as GLTFResult
  
  // Create new materials only for the ones we're modifying
  const customMaterial = materials.material.clone()
  
  // Set color based on isLive prop (red for live, faded blue for dead)
  customMaterial.color = new THREE.Color(isLive ? 0xff0000 : 0x6666ff)

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Object_2.geometry} material={materials['Material.001']} position={[-3.413, 1.451, -1.4]} rotation={[-1.376, 0.592, -0.919]} />
      <mesh geometry={nodes.Object_3.geometry} material={materials.coppepr} position={[-3.413, 1.451, -1.4]} rotation={[-1.376, 0.592, -0.919]} />
      <mesh geometry={nodes.Object_4.geometry} material={materials.nude} position={[-3.413, 1.451, -1.4]} rotation={[-1.376, 0.592, -0.919]} />
      <mesh geometry={nodes.Object_5.geometry} material={customMaterial} position={[-3.413, 1.451, -1.4]} rotation={[-1.376, 0.592, -0.919]} />
    </group>
  )
}

useGLTF.preload('/models/shell.glb')
